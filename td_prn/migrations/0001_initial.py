# Generated by Django 2.1.7 on 2019-02-12 09:56

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.sites.managers
import edc_base.utils
import edc_protocol.validators
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeathReport',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, unique=True, verbose_name='Subject Identifier')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Date of Death:')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Comments')),
                ('primary_source', models.CharField(choices=[('autopsy', 'Autopsy'), ('clinical_records', 'Clinical_records'), ('study_staff', 'Information from study care taker staff prior participant death'), ('health_care_provider', 'Contact with other (non-study) physician/nurse/other health care provider'), ('death_certificate', 'Death Certificate'), ('relatives_friends', "Information from participant's relatives or friends"), ('obituary', 'Obituary'), ('pending_information', 'Information requested, still pending'), ('no_info', 'No information will ever be available'), ('OTHER', 'Other, specify')], max_length=100, verbose_name='what is the primary source of  cause of death information? (if multiple source of information, list one with the smallest number closest to the top of the list)')),
                ('primary_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('cause_category', models.CharField(choices=[('hiv_related', 'HIV infection or HIV related diagnosis'), ('hiv_unrelated', 'Disease unrelated to HIV'), ('study_drug', 'Toxicity from Study Drug'), ('non_study_drug', 'Toxicity from non-Study drug'), ('trauma', 'Trauma/Accident'), ('no_info', 'No information available'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='based on the description above, what category best defines the major cause of death?')),
                ('cause_category_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" above, please specify')),
                ('perform_autopsy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Will an autopsy be performed later')),
                ('medical_responsibility', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('traditional', 'Traditional Healer'), ('all', 'Both Doctor or Nurse and Traditional Healer'), ('none', 'No known medical care received (family/friends only)')], max_length=50, verbose_name='Who was responsible for primary medical care of the participant during the month prior to death?')),
                ('participant_hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before death?')),
                ('reason_hospitalized', models.CharField(blank=True, choices=[('respiratory illness(unspecified)', 'Respiratory Illness(unspecified)'), ('respiratory illness, cxr confirmed', 'Respiratory Illness, CXR confirmed'), ('respiratory illness, cxr confirmed, bacterial pathogen, specify', 'Respiratory Illness, CXR confirmed, bacterial pathogen, specify'), ('respiratory illness, cxr confirmed, tb or probable tb', 'Respiratory Illness, CXR confirmed, TB or probable TB'), ('diarrhea illness(unspecified)', 'Diarrhea Illness(unspecified)'), ('diarrhea illness, viral or bacterial pathogen, specify', 'Diarrhea Illness, viral or bacterial pathogen, specify'), ('sepsis(unspecified)', 'Sepsis(unspecified)'), ('sepsis, pathogen specified, specify', 'Sepsis, pathogen specified, specify'), ('mengitis(unspecified)', 'Mengitis(unspecified)'), ('mengitis, pathogen specified, specify', 'Mengitis, pathogen specified, specify'), ('non-infectious reason for hospitalization, specify', 'Non-infectious reason for hospitalization, specify'), ('OTHER', 'Other infection, specify')], max_length=50, null=True, verbose_name='if yes, hospitalized, what was the primary reason for hospitalisation? ')),
                ('reason_hospitalized_other', models.TextField(blank=True, max_length=250, null=True, verbose_name='if other illness or pathogen specify or non infectious reason, please specify below:')),
                ('days_hospitalized', models.IntegerField(default=0, help_text='in days', verbose_name='For how many days was the participant hospitalised during the illness immediately before death? ')),
                ('narrative', models.TextField(blank=True, help_text='Note: Cardiac and pulmonary arrest are not major reasons and should not be used to describe major cause', null=True, verbose_name='Describe the major cause of death (including pertinent autopsy information if available), starting with the first noticeable illness thought to be related to death, continuing to time of death.')),
                ('illness_duration', models.IntegerField(help_text='in days (If unknown enter -1)', verbose_name='Duration of acute illness directly causing death   ')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Death Report',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeathReport',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(db_index=True, max_length=50, verbose_name='Subject Identifier')),
                ('slug', models.CharField(db_index=True, default='', editable=False, help_text='a field used for quick search', max_length=250, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('death_date', models.DateField(validators=[edc_base.model_validators.date.datetime_not_future], verbose_name='Date of Death:')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Comments')),
                ('primary_source', models.CharField(choices=[('autopsy', 'Autopsy'), ('clinical_records', 'Clinical_records'), ('study_staff', 'Information from study care taker staff prior participant death'), ('health_care_provider', 'Contact with other (non-study) physician/nurse/other health care provider'), ('death_certificate', 'Death Certificate'), ('relatives_friends', "Information from participant's relatives or friends"), ('obituary', 'Obituary'), ('pending_information', 'Information requested, still pending'), ('no_info', 'No information will ever be available'), ('OTHER', 'Other, specify')], max_length=100, verbose_name='what is the primary source of  cause of death information? (if multiple source of information, list one with the smallest number closest to the top of the list)')),
                ('primary_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=100, null=True, verbose_name='If "Other" above, please specify')),
                ('cause_category', models.CharField(choices=[('hiv_related', 'HIV infection or HIV related diagnosis'), ('hiv_unrelated', 'Disease unrelated to HIV'), ('study_drug', 'Toxicity from Study Drug'), ('non_study_drug', 'Toxicity from non-Study drug'), ('trauma', 'Trauma/Accident'), ('no_info', 'No information available'), ('OTHER', 'Other, specify')], max_length=50, verbose_name='based on the description above, what category best defines the major cause of death?')),
                ('cause_category_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" above, please specify')),
                ('perform_autopsy', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Will an autopsy be performed later')),
                ('medical_responsibility', models.CharField(choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('traditional', 'Traditional Healer'), ('all', 'Both Doctor or Nurse and Traditional Healer'), ('none', 'No known medical care received (family/friends only)')], max_length=50, verbose_name='Who was responsible for primary medical care of the participant during the month prior to death?')),
                ('participant_hospitalized', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3, verbose_name='Was the participant hospitalised before death?')),
                ('reason_hospitalized', models.CharField(blank=True, choices=[('respiratory illness(unspecified)', 'Respiratory Illness(unspecified)'), ('respiratory illness, cxr confirmed', 'Respiratory Illness, CXR confirmed'), ('respiratory illness, cxr confirmed, bacterial pathogen, specify', 'Respiratory Illness, CXR confirmed, bacterial pathogen, specify'), ('respiratory illness, cxr confirmed, tb or probable tb', 'Respiratory Illness, CXR confirmed, TB or probable TB'), ('diarrhea illness(unspecified)', 'Diarrhea Illness(unspecified)'), ('diarrhea illness, viral or bacterial pathogen, specify', 'Diarrhea Illness, viral or bacterial pathogen, specify'), ('sepsis(unspecified)', 'Sepsis(unspecified)'), ('sepsis, pathogen specified, specify', 'Sepsis, pathogen specified, specify'), ('mengitis(unspecified)', 'Mengitis(unspecified)'), ('mengitis, pathogen specified, specify', 'Mengitis, pathogen specified, specify'), ('non-infectious reason for hospitalization, specify', 'Non-infectious reason for hospitalization, specify'), ('OTHER', 'Other infection, specify')], max_length=50, null=True, verbose_name='if yes, hospitalized, what was the primary reason for hospitalisation? ')),
                ('reason_hospitalized_other', models.TextField(blank=True, max_length=250, null=True, verbose_name='if other illness or pathogen specify or non infectious reason, please specify below:')),
                ('days_hospitalized', models.IntegerField(default=0, help_text='in days', verbose_name='For how many days was the participant hospitalised during the illness immediately before death? ')),
                ('narrative', models.TextField(blank=True, help_text='Note: Cardiac and pulmonary arrest are not major reasons and should not be used to describe major cause', null=True, verbose_name='Describe the major cause of death (including pertinent autopsy information if available), starting with the first noticeable illness thought to be related to death, continuing to time of death.')),
                ('illness_duration', models.IntegerField(help_text='in days (If unknown enter -1)', verbose_name='Duration of acute illness directly causing death   ')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site')),
            ],
            options={
                'verbose_name': 'historical Death Report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaternalOffStudy',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(db_index=True, max_length=50, verbose_name='Subject Identifier')),
                ('tracking_identifier', models.CharField(db_index=True, max_length=30)),
                ('offschedule_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time subject taken off schedule')),
                ('offstudy_date', models.DateField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Off-study Date')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('reason', models.CharField(choices=[('multiple_vialble_gestations', 'Multiple (2 or more) viable gestations seen on ultrasound'), ('miscarriage_or_arbotion_lt_20wks', 'Miscarriage or arbotion (fetal demise < 20 weeks GA)'), ('fetal_death_gt_20wks', 'fetal Death at >= 20weeks GA (IUFD) or still born'), ('maternal_seroconversion_gt_33wks', 'Maternal seroconversion after 33 weeks GA'), ('took_art_less_than_4weeks', 'Mother took ART for less than 4 weeks during pregnancy'), ('maternal_death_pre_deliv', 'Maternal death PRIOR to delivery (complete the Death Report Form AF005)'), ('maternal_death_post_deliv', 'Maternal death POST delivery (complete the Death Report Form AF005)'), ('moving_out_of_study_area_pre_deliv', 'Participant stated she will be moving out of the study area or unable to stay in study area PRIOR delivery'), ('moving_out_of_study_area_post_deliv', 'Participant stated she will be moving out of the study area or unable to stay in study area POST delivery'), ('loss_to_followup_prior_deliv', 'Participant lost to follow-up/unable to locate PRIOR to delivery'), ('loss_to_followup_post_deliv', 'Participant lost to follow-up/unable to locate POST to delivery'), ('loss_to_followup_contacted_prior_deliv', 'Participant lost to follow-up, contacted but did not come to study clinic PRIOR to delivery'), ('loss_to_followup_contacted_post_deliv', 'Participant lost to follow-up, contacted but did not come to study clinic POST to delivery'), ('withdrew_consent_prior_deliv', 'Mother changed mind and withdrew consent PRIOR to delivery'), ('withdrew_consent_post_deliv', 'Mother changed mind and withdrew consent POST to delivery'), ('father_refused_prior_deliv', 'Father of the baby refused to participate, hence participant withdrew consent PRIOR delivery'), ('father_refused_post_deliv', 'Father of the baby refused to participate, hence participant withdrew consent POST delivery'), ('family_member_refused_prior_deliv', 'Other family member refused to participate, hence participant withdrew consent PRIOR delivery'), ('family_member_refused_post_deliv', 'Other family member refused to participate, hence participant withdrew consent POST delivery'), ('infant_hiv_infected', 'Infant found to be HIV infected'), ('infant_death', 'Infant death (complete infant Death Report Form)'), ('protocol_completion', 'Completion of protocol required period of time for observation (see Study Protocol for definition of "Completion") (skip to end of form)'), ('unable_to_determine_ga', 'Unable to confirm GA by Ultrasound.'), ('enrolled_erroneously', 'Enrolled erroneously – did not meet eligibility criteria'), ('mother_not_complete_anv1', 'Mother did not complete ANV1 (1010) visit.'), ('OTHER', 'Other')], max_length=115, null=True, verbose_name='Please code the primary reason participant taken off-study')),
                ('reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.Site')),
            ],
            options={
                'verbose_name': 'historical Maternal Off Study',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MaternalOffStudy',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, unique=True, verbose_name='Subject Identifier')),
                ('tracking_identifier', models.CharField(max_length=30, unique=True)),
                ('offschedule_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Date and time subject taken off schedule')),
                ('offstudy_date', models.DateField(default=edc_base.utils.get_utcnow, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Off-study Date')),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", null=True, validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('reason', models.CharField(choices=[('multiple_vialble_gestations', 'Multiple (2 or more) viable gestations seen on ultrasound'), ('miscarriage_or_arbotion_lt_20wks', 'Miscarriage or arbotion (fetal demise < 20 weeks GA)'), ('fetal_death_gt_20wks', 'fetal Death at >= 20weeks GA (IUFD) or still born'), ('maternal_seroconversion_gt_33wks', 'Maternal seroconversion after 33 weeks GA'), ('took_art_less_than_4weeks', 'Mother took ART for less than 4 weeks during pregnancy'), ('maternal_death_pre_deliv', 'Maternal death PRIOR to delivery (complete the Death Report Form AF005)'), ('maternal_death_post_deliv', 'Maternal death POST delivery (complete the Death Report Form AF005)'), ('moving_out_of_study_area_pre_deliv', 'Participant stated she will be moving out of the study area or unable to stay in study area PRIOR delivery'), ('moving_out_of_study_area_post_deliv', 'Participant stated she will be moving out of the study area or unable to stay in study area POST delivery'), ('loss_to_followup_prior_deliv', 'Participant lost to follow-up/unable to locate PRIOR to delivery'), ('loss_to_followup_post_deliv', 'Participant lost to follow-up/unable to locate POST to delivery'), ('loss_to_followup_contacted_prior_deliv', 'Participant lost to follow-up, contacted but did not come to study clinic PRIOR to delivery'), ('loss_to_followup_contacted_post_deliv', 'Participant lost to follow-up, contacted but did not come to study clinic POST to delivery'), ('withdrew_consent_prior_deliv', 'Mother changed mind and withdrew consent PRIOR to delivery'), ('withdrew_consent_post_deliv', 'Mother changed mind and withdrew consent POST to delivery'), ('father_refused_prior_deliv', 'Father of the baby refused to participate, hence participant withdrew consent PRIOR delivery'), ('father_refused_post_deliv', 'Father of the baby refused to participate, hence participant withdrew consent POST delivery'), ('family_member_refused_prior_deliv', 'Other family member refused to participate, hence participant withdrew consent PRIOR delivery'), ('family_member_refused_post_deliv', 'Other family member refused to participate, hence participant withdrew consent POST delivery'), ('infant_hiv_infected', 'Infant found to be HIV infected'), ('infant_death', 'Infant death (complete infant Death Report Form)'), ('protocol_completion', 'Completion of protocol required period of time for observation (see Study Protocol for definition of "Completion") (skip to end of form)'), ('unable_to_determine_ga', 'Unable to confirm GA by Ultrasound.'), ('enrolled_erroneously', 'Enrolled erroneously – did not meet eligibility criteria'), ('mother_not_complete_anv1', 'Mother did not complete ANV1 (1010) visit.'), ('OTHER', 'Other')], max_length=115, null=True, verbose_name='Please code the primary reason participant taken off-study')),
                ('reason_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If Other, specify ...')),
                ('comment', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.Site')),
            ],
            options={
                'verbose_name': 'Maternal Off Study',
                'verbose_name_plural': 'Maternal Off Studies',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', edc_base.sites.managers.CurrentSiteManager()),
            ],
        ),
    ]
